{
  "level": 3,
  "description": "Level 3: 3 operations, 3-4 premises",
  "problems": [
    {
      "premises": [
        "P → Q",
        "Q → R",
        "R → S",
        "P"
      ],
      "conclusion": "S",
      "expected_operations": 3,
      "description": "Chain of Hypothetical Syllogisms",
      "solution": "Apply Hypothetical Syllogism twice to build \"P → S\", then Modus Ponens with \"P\" to get \"S\"."
    },
    {
      "premises": [
        "P ∧ Q",
        "R ∧ S"
      ],
      "conclusion": "P ∧ R",
      "expected_operations": 3,
      "description": "Multiple Simplifications + Conjunction",
      "solution": "Apply Simplification to extract \"P\" from \"P ∧ Q\" and \"R\" from \"R ∧ S\", then Conjunction to combine them."
    },
    {
      "premises": [
        "¬¬(P ∨ Q)",
        "¬P",
        "Q → R"
      ],
      "conclusion": "R",
      "expected_operations": 3,
      "description": "Double Neg + Disj Syll + MP",
      "solution": "Apply Double Negation to get \"P ∨ Q\", then Disjunctive Syllogism with \"¬P\" to get \"Q\", finally Modus Ponens to get \"R\"."
    },
    {
      "premises": [
        "(P ∧ Q) → R",
        "¬R",
        "P"
      ],
      "conclusion": "¬Q",
      "expected_operations": 3,
      "description": "Modus Tollens + De Morgan's + Disj Syll",
      "solution": "Apply Modus Tollens to get \"¬(P ∧ Q)\", then De Morgan's to get \"¬P ∨ ¬Q\", finally Disjunctive Syllogism with \"P\" to get \"¬Q\"."
    },
    {
      "premises": [
        "P ∨ (Q ∧ R)",
        "¬P"
      ],
      "conclusion": "Q",
      "expected_operations": 3,
      "description": "Disjunctive Syllogism + Simplification",
      "solution": "Apply Disjunctive Syllogism to get \"Q ∧ R\", then Simplification to extract \"Q\"."
    },
    {
      "premises": [
        "¬(P ∧ Q)",
        "R → P",
        "R"
      ],
      "conclusion": "¬Q",
      "expected_operations": 3,
      "description": "MP + De Morgan's + Disj Syll",
      "solution": "Apply Modus Ponens to get \"P\", then De Morgan's on \"¬(P ∧ Q)\" to get \"¬P ∨ ¬Q\", finally Disjunctive Syllogism to get \"¬Q\"."
    },
    {
      "premises": [
        "P",
        "Q",
        "R",
        "S"
      ],
      "conclusion": "((P ∧ Q) ∧ R) ∧ S",
      "expected_operations": 3,
      "description": "Chain of Conjunctions",
      "solution": "Apply Conjunction three times: combine \"P\" and \"Q\", then combine with \"R\", finally combine with \"S\"."
    },
    {
      "premises": [
        "P → (Q ∨ R)",
        "P",
        "¬Q"
      ],
      "conclusion": "R",
      "expected_operations": 3,
      "description": "MP + Disjunctive Syllogism",
      "solution": "Apply Modus Ponens to get \"Q ∨ R\", then Disjunctive Syllogism with \"¬Q\" to get \"R\"."
    },
    {
      "premises": [
        "¬¬P ∧ ¬¬Q"
      ],
      "conclusion": "P ∧ Q",
      "expected_operations": 3,
      "description": "Simplification + Double Neg + Conjunction",
      "solution": "Apply Simplification to get \"¬¬P\" and \"¬¬Q\", then Double Negation on each to get \"P\" and \"Q\", finally Conjunction."
    },
    {
      "premises": [
        "(P ∨ Q) ∧ R",
        "¬P"
      ],
      "conclusion": "Q ∧ R",
      "expected_operations": 3,
      "description": "Simplification + Disj Syll + Conjunction",
      "solution": "Apply Simplification to get \"P ∨ Q\" and \"R\", then Disjunctive Syllogism to get \"Q\", finally Conjunction with \"R\"."
    }
  ]
}